#+TITLE: Имитационное моделирование нерегулярного волнения для программ динамики морских объектов
#+AUTHOR: Иван Ганкевич
#+DATE: Санкт-Петербург, 2018
#+LANGUAGE: ru
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [14pt,aspectratio=169,ignorenonframetext]
#+LATEX_HEADER_EXTRA: \input{slides-preamble}
#+BEAMER_THEME: SaintPetersburg
#+OPTIONS: todo:nil title:nil ':t toc:nil H:2
#+STARTUP: indent
#+PROPERTY: header-args:R :results graphics :exports results :cache yes :eval no-export

#+begin_export latex
\setbeamertemplate{title page}{%
	\centering%
	\vskip1cm\spbuInsertField{title}%
	\ifx\insertsubtitle\empty\else%
		\vskip0.5\baselineskip%
		\spbuInsertField{subtitle}%
	\fi%
	\vfill\spbuInsertField{author}%
	\vfill\spbuInsertField{institute}%
	\vfill\inserttitlegraphic%
	\vfill\spbuInsertField{date}%
}
\setbeamerfont{block title}{size=\small}
\setbeamerfont{note page}{size=\footnotesize}
\setjobnamebeamerversion{arma-slides}
#+end_export

* Введение
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

** Титульный лист
:PROPERTIES:
:BEAMER_env: fullframe
:BEAMER_act: <presentation>
:END:

#+beamer: \label{slide-title}
#+beamer: \maketitle

** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-title}

Здравствуйте, уважаемые члены совета, коллеги и гости. Меня зовут Иван Ганкевич.
Моя диссертация посвящена имитационному моделированию морского волнения.
Диссертация выполнена под руководством д.т.н.\nbsp{}Дегтярева Александра
Борисовича.

** Постановка задачи
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+beamer: \label{slide-problem}

Разработать
- трехмерную имитационную модель морского волнения,
- метод вычисления поля давлений под взволнованной поверхностью,
- программный комплекс для систем с общей и распределенной памятью,
которые являются /альтернативами/ аналогам, разработанным в рамках
линейной теории волн.

** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-problem}

Цель исследования заключалась в изучении и разработке математических моделей и
численных методов, которые бы позволили выйти за рамки линейной теории волн в
задаче имитационного моделирования морского волнения и стать альтернативами
моделям и методам, основанных на этой теории.

В рамках данного исследования была разработана
- трехмерная имитационная математическая модель морского волнения,
- метод вычисления поля давлений под взволнованной морской поверхностью и
- программный комплекс, реализующий модель и метод, для систем с общей и
  распределенной памятью.

* Трехмерная модель АРСС

** Трехмерная модель АРСС
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+beamer: \label{slide-arma}

\begin{equation*}
  \rectemph{zeta1}{\zeta_{i,j,k}} =
  \sum\limits_{l=0}^{p_1}
  \sum\limits_{m=0}^{p_2}
  \sum\limits_{n=0}^{p_3}
  \rectemph{phi}{\Phi_{l,m,n}} \rectemph{zeta2}{\zeta_{i-l,j-m,k-n}}
  +
  \sum\limits_{l=0}^{q_1}
  \sum\limits_{m=0}^{q_2}
  \sum\limits_{n=0}^{q_3}
  \rectemph{theta}{\Theta_{l,m,n}} \rectemph{eps}{\epsilon_{i-l,j-m,k-n}}
\end{equation*}

#+BEAMER: \vspace{0.5cm}

#+begin_src dot :exports results :file build/arma-pipeline-ru.pdf
digraph G {

  node [fontname="Open Sans",fontsize=10,margin="0.055,0",shape=box,bgcolor="E5E6E5",style="filled",height="0.37"]
  graph [nodesep="0.25",ranksep="0.30",rankdir="LR" margin=0]
  edge [arrowsize=0.66]
  bgcolor="#F5F6F5"

  acf [label="АКФ"]
  yule_walker_equations [label="Уравнения\nЮла—Уокера"]
  nonlinear_equations [label="Нелинейные\nуравнения"]
  ar_process [label="Модель\nАР"]
  ma_process [label="Модель\nСС"]
  arma_process [label="Модель\nАРСС"]

  acf->yule_walker_equations->ar_process->arma_process
  acf->nonlinear_equations->ma_process->arma_process

}
#+end_src

#+RESULTS:
[[file:build/arma-pipeline-ru.pdf]]

#+begin_export latex
\begin{tikzpicture}[remember picture,overlay]
\node[fill=none,baseline,anchor=south west,xshift=1.1cm,yshift=-1.75cm]
	(zetaLabel) at (current page.north west)
	{\scriptsize{}подъем взволнованной поверхности};
\node[fill=none,anchor=south east,xshift=-2cm,yshift=-1.75cm]
	(epsLabel) at (current page.north east)
	{\scriptsize{}белый шум};
\node[fill=none,baseline,anchor=north west,below=of phi,yshift=0.2cm]
	(phiLabel)
	{\scriptsize{}коэф. АР};
\node[fill=none,baseline,anchor=north west,below=of theta,yshift=0.2cm]
	(thetaLabel)
	{\scriptsize{}коэф. СС};
\path[->,thick] (zetaLabel.south -| zeta1.north) edge (zeta1.north);
\path[->,thick] (zetaLabel.south -| zeta2.north west)
	edge [transform canvas={xshift=2mm}]
	(zeta2.north west);
\path[->,thick] (epsLabel.south -| eps.north west)
	edge [transform canvas={xshift=2mm}]
	(eps.north west);
\path[->,thick] (phiLabel.north -| phi.south west)
	edge [transform canvas={xshift=2.5mm}]
	(phi.south west);
\path[->,thick] (thetaLabel.north -| theta.south west)
	edge [transform canvas={xshift=2.5mm}]
	(theta.south west);
\end{tikzpicture}
#+end_export

** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-arma}

В качестве имитационной модели в данной работе используется модель авторегрессии
скользящего среднего (сокращенно, модель АРСС). Эта модель применяется в
статистике для анализа и прогнозирования одномерных скалярно- и векторно-значных
временных рядов, в данной же работе ее трехмерный аналог адаптирован для
воспроизведения значений подъема взволнованной морской поверхности в дискретные
моменты времени. Имитация морского волнения с помощью одномерной модели АРСС
была изучена в работах Рожкова, Гургенидзе, Трапезникова, Бухановского, Спаноса
и Зельдина.

Основное уравнение трехмерной модели АРСС представлено на слайде. Параметрами
являются
- дисперсия белого шума, имеющего нормальное распределение,
- коэффициенты авторегрессии и
- коэффициенты скользящего среднего.

Параметры модели определяются из автоковариационной функции взволнованной
морской поверхности путем решения соответствующих систем уравнений. Для
получения коэффициентов авторегрессии решается система линейных алгебраических
уравнений Юла---Уокера стандартным методом, а для получения коэффициентов
скользящего среднего решается система нелинейных уравнений методом простой
итерации.

Основным отличием модели АРСС от линейных аналогов является
- использование автоковариационной функции вместо частотно-направленных спектров
  морского волнения,
- отсутствие периодичности, поскольку период реализации равен периоду генератора
  псевдослучайных чисел, и
- нефизическая природа модели, поскольку ее формулы не выводятся из
  законов сохранения для морского волнения.
Обсудим каждое из них по порядку.


** АКФ морской поверхности
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+beamer: \label{slide-acf}

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:END:

**** Column 1
:PROPERTIES:
:BEAMER_col: 1.00
:END:

#+latex: \vspace{-0.5cm}
#+begin_src dot :exports results :file build/acf-pipeline-ru.pdf
digraph G {

  node [fontname="Open Sans",fontsize=10,margin="0.055,0",shape=box,bgcolor="E5E6E5",style="filled"]
  graph [nodesep="0.25",ranksep="0.20",rankdir="TB" margin=0]
  edge [arrowsize=0.66]
  bgcolor="#F5F6F5"

  function [label="Формула\nпрофиля волны",height="0.40"]
  discrete_function [label="Дискретный\nпрофиль волны",height="0.40"]
  field_data [label="Натурные\nданные",width="1.1",height="0.40"]
  theorem [label="Теорема Винера—Хинчина",height="0.20"]
  acf [label="АКФ",height="0.20"]

  function->theorem
  discrete_function->theorem
  field_data->theorem
  theorem->acf

}
#+end_src

#+RESULTS:
[[file:build/acf-pipeline-ru.pdf]]

**** Column 2					:noexport:
:PROPERTIES:
:BEAMER_col: 0.37
:END:

\begin{equation*}
\hat{\gamma} = |\hat{\zeta}|^2
\end{equation*}

*** Separator
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** Column 1
:PROPERTIES:
:BEAMER_col: 0.30
:END:

#+header: :width 1.7 :height 1.2 :bg #F5F6F5 :font sans
#+begin_src R :file build/acf-propagating-plain-wave-ru.pdf
source(file.path("R", "common.R"))
par(mar=c(0,0.5,0,0))
df <- data.frame(t=rep(NA,0), x=rep(NA,0), y=rep(NA,0), z=rep(NA,0))
n <- 20
grid <- seq(1, n)
alpha <- 2.13975
beta <- 0.77341
gamm <- 0.549017
for (i in grid) {
	for (j in grid) {
    x <- i/(n-1)
    y <- j/(n-1)
		z <- gamm * exp(-alpha*(x+y)) * cos(beta*(x+y))
		df[nrow(df) + 1,] <- c(0,i,j,z)
	}
}
arma.wavy_plot(df, 0, zlim=c(0,0.5), expand=0.5, border=NA)
#+end_src

#+caption: Плоская волна
#+RESULTS:
[[file:build/acf-propagating-plain-wave-ru.pdf]]


**** Column 2
:PROPERTIES:
:BEAMER_col: 0.35
:END:

#+header: :width 1.7 :height 1.2 :bg #F5F6F5 :font sans
#+begin_src R :file build/acf-standing-plain-wave-ru.pdf
source(file.path("R", "common.R"))
par(mar=c(0,0.5,0,0))
df <- data.frame(t=rep(NA,0), x=rep(NA,0), y=rep(NA,0), z=rep(NA,0))
n <- 20
grid <- seq(1, n)
alpha <- 2.31906
beta <- -5.49873
gamm <- 0.0680413
for (i in grid) {
	for (j in grid) {
    x <- i/(n-1)
    y <- j/(n-1)
		z <- gamm * exp(-alpha*(x+y)) * cos(beta*x) * cos(beta*y)
		df[nrow(df) + 1,] <- c(0,i,j,z)
	}
}
arma.wavy_plot(df, 0, zlim=c(-0.05,0.05), expand=0.5, border=NA)
#+end_src

#+caption: Плоская стоячая волна
#+RESULTS:
[[file:build/acf-standing-plain-wave-ru.pdf]]

**** Column 3
:PROPERTIES:
:BEAMER_col: 0.30
:END:

#+header: :width 1.7 :height 1.2 :bg #F5F6F5 :font sans
#+begin_src R :file build/acf-propagating-stokes-wave-ru.pdf
source(file.path("R", "common.R"))
par(mar=c(0,0.5,0,0))
df <- data.frame(t=rep(NA,0), x=rep(NA,0), y=rep(NA,0), z=rep(NA,0))
n <- 40
alpha <- 0.5
grid <- seq(1, n)
k <- 0.77341
t <- 0
omega <- 0.3
a <- 1.5
for (i in grid) {
	for (j in grid) {
    x <- i/(n-1)
    y <- j/(n-1)
    theta <- k*(x + y) - omega*t
		z <- a * exp(-alpha*(x+y)) * (cos(theta) + 0.5*k*a*cos(2*theta) + (3/8)*(k*a*k*a)*cos(3*theta))
		df[nrow(df) + 1,] <- c(0,i,j,z)
	}
}
arma.acf_plot(df, 0, zlim=c(0,1.0), expand=0.5, border=NA)
#+end_src

#+caption: Волна Стокса
#+RESULTS:
[[file:build/acf-propagating-stokes-wave-ru.pdf]]

** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-acf}

Одним из основных отличий модели АРСС от линейных аналогов является
использование автоковариационной функции вместо частотно-направленных спектров
морского волнения, что позволяет получить ряд преимуществ. Автоковариационная
функция включает в себя не только две пространственные, но и временную
компоненту, что позволяет моделировать форму волны, а не только частоту и
направление движения. Посредством теоремы Винера---Хинчина автоковариационная
функция легко вычисляется аналитически из явной формулы взволнованной
поверхности или численно из дискретно заданной взволнованной поверхности или
натурных данных. Модель способна воспроизводить плоские волны, волны Стокса и
нерегулярное волнение, автоковариационные функции которых показаны на слайде.

** Определение коэффициентов			:noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:
#+begin_export latex
\framesubitile{Модель АР}
    \small%
    Решить СЛАУ (трехмерные уравнения Юла---Уокера) относительно $\Phi$:
    \begin{equation*}
        \Gamma
        \left[
            \begin{array}{l}
                \Phi_{0,0,0}\\
                \Phi_{0,0,1}\\
                \vdotswithin{\Phi_{0,0,0}}\\
                \Phi_{p_1,p_2,p_3}
            \end{array}
        \right]
        =
        \left[
            \begin{array}{l}
                K_{0,0,0}-\Var{\epsilon}\\
                K_{0,0,1}\\
                \vdotswithin{K_{0,0,0}}\\
                K_{p_1,p_2,p_3}
            \end{array}
        \right],
        \qquad
        \Gamma=
        \left[
            \begin{array}{llll}
                \Gamma_0 & \Gamma_1 & \cdots & \Gamma_{p_1} \\
                \Gamma_1 & \Gamma_0 & \ddots & \vdotswithin{\Gamma_0} \\
                \vdotswithin{\Gamma_0} & \ddots & \ddots & \Gamma_1 \\
                \Gamma_{p_1} & \cdots & \Gamma_1 & \Gamma_0
            \end{array}
        \right],
    \end{equation*}
    \begin{equation*}
      \Gamma_i =
      \left[
      \begin{array}{llll}
        \Gamma^0_i & \Gamma^1_i & \cdots & \Gamma^{p_2}_i \\
        \Gamma^1_i & \Gamma^0_i & \ddots & \vdotswithin{\Gamma^0_i} \\
        \vdotswithin{\Gamma^0_i} & \ddots & \ddots & \Gamma^1_i \\
        \Gamma^{p_2}_i & \cdots & \Gamma^1_i & \Gamma^0_i
      \end{array}
      \right]
      \qquad
      \Gamma_i^j=
      \left[
      \begin{array}{llll}
        K_{i,j,0} & K_{i,j,1} & \cdots & K_{i,j,p_3} \\
        K_{i,j,1} & K_{i,j,0} & \ddots &x \vdotswithin{K_{i,j,0}} \\
        \vdotswithin{K_{i,j,0}} & \ddots & \ddots & K_{i,j,1} \\
        K_{i,j,p_3} & \cdots & K_{i,j,1} & K_{i,j,0}
      \end{array}
      \right].
    \end{equation*}
#+end_export

** Определение коэффициентов				:noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:
#+BEAMER: \framesubitile{Модель СС}
#+BEAMER: \small
Решить систему нелинейных уравнений
\begin{equation*}
  K_{i,j,k} =
  \left[
	\displaystyle
	\sum\limits_{l=i}^{q_1}
	\sum\limits_{m=j}^{q_2}
	\sum\limits_{n=k}^{q_3}
	\Theta_{l,m,n}\Theta_{l-i,m-j,n-k}
  \right]
  \Var{\epsilon}
\end{equation*}
относительно \(\Theta\) с помощью метода простой итерации:
\begin{equation*}
  \theta_{i,j,k} =
	-\frac{K_{0,0,0}}{\Var{\epsilon}}
	+
	\sum\limits_{l=i}^{q_1}
	\sum\limits_{m=j}^{q_2}
	\sum\limits_{n=k}^{q_3}
	\Theta_{l,m,n} \Theta_{l-i,m-j,n-k}.
\end{equation*}

** Критерии выбора моделей АР и СС				:noexport:
Использовать модель АР для стоячих волн и модель СС для прогрессивных.
#+latex: \newline\newline
Экспериментальный результат:
- модели расходятся, если делать наоборот;
- характеристики взволнованной поверхности соответствуют реальным.

** Верификация модели АРСС
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+beamer: \label{slide-arma-verification}

*** Стоячие волны
:PROPERTIES:
:BEAMER_col: 0.47
:BEAMER_opt: T
:END:

#+latex: \vspace{-1cm}
#+header: :width 2.7 :height 2.7 :bg #F5F6F5 :font sans
#+begin_src R :file build/standing-wave-qqplots-slides-ru.pdf
source(file.path("R", "common.R"))
par(pty="s", mfrow=c(2, 2), mar=c(1,1,1,0), mgp=c(3,0.3,0), cex=0.6, fg='black', col='navy')
arma.qqplot_grid_adj(
  file.path("build", "arma-benchmarks", "verification-orig", "standing_wave"),
  c("elevation", "heights_y", "lengths_y", "periods"),
  c("подъем", "высота", "длина", "период"),
  0.1,
  xlab="x",
  ylab="y",
  tck=0.04
)
#+end_src

#+caption: Стоячие волны
#+RESULTS:
[[file:build/standing-wave-qqplots-slides-ru.pdf]]


*** Прогрессивные волны
:PROPERTIES:
:BEAMER_col: 0.47
:BEAMER_opt: T
:END:

#+latex: \vspace{-1cm}
#+header: :width 2.7 :height 2.7 :bg #F5F6F5 :font sans
#+begin_src R :file build/propagating-wave-qqplots-slides-ru.pdf
source(file.path("R", "common.R"))
par(pty="s", mfrow=c(2, 2), mar=c(1,1,1,0), mgp=c(3,0.3,0), cex=0.6, col='navy')
arma.qqplot_grid_adj(
  file.path("build", "arma-benchmarks", "verification-orig", "propagating_wave"),
  c("elevation", "heights_y", "lengths_y", "periods"),
  c("подъем", "высота", "длина", "период"),
  0.1,
  xlab="x",
  ylab="y",
  tck=0.04
)
#+end_src

#+caption: Прогрессивные волны
#+RESULTS:
[[file:build/propagating-wave-qqplots-slides-ru.pdf]]


** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-arma-verification}

Другим основным отличием модели АРСС от линейных аналогов является ее
нефизическая природа. Формулы модели не выводятся из физических законов
сохранения и модель неспособна воспроизводить индивидуальные волны. Вместо этого
воспроизводится взволнованная морская поверхность как единое целое,
распределения интегральных характеристик которой совпадают с реальными.

На слайде представлены спрямленные диаграммы (quantile-quantile plots)
распределений различных параметров волн. Чем ближе точки расположены к прямой
линии, тем выше степень совпадения распределений. Как видно из графиков,
распределения параметров прогрессивных волн почти полностью совпадает с
реальным, отличаясь лишь на хвостах, где размер выборки невелик. Распределения
параметров стоячих волн имеют большее расхождение на хвостах, ввиду отсутствия
надежных натурных данных для такого типа волн.

** Моделирование асимметричности                                  :noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+begin_src dot :exports results :file build/slides-nit-pipeline-ru.pdf
digraph G {

  node [fontname="Open Sans",fontsize=10,margin="0.055,0",shape=box,fillcolor="#E5E6E5",style="filled",height="0.37"]
  graph [nodesep="0.55",ranksep="0.30",rankdir="TB",margin=0,splines=ortho]
  edge [fontname="Open Sans",fontsize=10,arrowsize=0.66]
  bgcolor="#F5F6F5"

  subgraph step1 {
    rank="same"
    acf [label="АКФ"]
    zeta [label="Поверхность"]
  }

  subgraph step2 {
    rank="same"
    acf_tr [label="АКФ'",fillcolor="#E5C6C5"]
    zeta_tr [label="Поверхность'",fillcolor="#E5C6C5"]
  }

  acf->zeta [color=invis]
  acf->acf_tr [label="      Разложение в ряд\l      по полиномам Эрмита\l"]
  acf_tr->zeta_tr
  zeta_tr->zeta [label="Преобразование\lаппликат\l"]

}
#+end_src

#+RESULTS:
[[file:build/slides-nit-pipeline-ru.pdf]]

#+header: :width 4 :height 1.5 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-nit-ru.pdf
source(file.path("R", "nonlinear.R"))
par(mar=c(2,2,0.3,0.1),cex=0.7,mgp=c(3,0.3,0))
args <- list(
  graphs=c('Гауссово', 'РГШ', 'АНР'),
  linetypes=c('solid', 'dashed', 'dotted'),
  axis=list(tck=-0.04),
  legend="bottom"
)
args$title <- NULL
arma.plot_nonlinear(file.path("build", "nit-standing"), args)
#+end_src

#+RESULTS:
[[file:build/slides-nit-ru.pdf]]


* Поле давлений под дискретно заданной взволнованной поверхностью

** Уравнения потенциального течения
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+beamer: \footnotesize
#+beamer: \label{slide-potential-flow}
#+begin_export latex
\begin{beamercolorbox}[colsep*=.75ex,vmode]{block body}%
\vspace{-\baselineskip}%
\begin{align*}%
    & \nabla^2\phi = 0
	& \text{уравнение неразрывности}
	\\
    & \phi_t+\frac{1}{2} |\vec{\upsilon}|^2 + g\zeta=-\frac{p}{\rho}
    & \text{динамическое ГУ на }z=\zeta(x,y,t)
	\\
    & D\zeta = \nabla \phi \cdot \vec{n}
    & \text{кинематическое ГУ на }z=\zeta(x,y,t)\\
\end{align*}%
\vspace{-2.5\baselineskip}%
\end{beamercolorbox}%
%
\spbuArrow{}%
\vspace{-0.2cm}%
%
\begin{beamercolorbox}[colsep*=.75ex,vmode]{block body}%
\vspace{-\baselineskip}%
\begin{align*}%
    & \phi_{xx} + \phi_{yy} + \phi_{zz} = 0\\
    & \zeta_t 
    = \underbrace{\fillrectemph{f1}{\left(\FracSqrtZetaY{\zeta_x} - \zeta_x\right)}}_{f_1} \phi_x
    + \underbrace{\fillrectemph{f2}{\left(\FracSqrtZetaY{\zeta_y} - \zeta_y\right)}}_{f_2} \phi_y
    - \underbrace{\fillrectemph{f3}{\FracSqrtZetaY{1}}}_{f_3} \phi_z \\
\end{align*}%
\vspace{-2.7\baselineskip}%
\end{beamercolorbox}%
#+end_export

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** Column 1
:PROPERTIES:
:BEAMER_col: 0.47
:END:
#+begin_export latex
\vspace{-\baselineskip}%
\spbuArrow{}%
\vspace{-1.3\baselineskip}%
\begingroup%
\setlength\abovedisplayskip{1mm}%
\begin{beamercolorbox}[colsep*=.75ex,vmode]{block body}%
Решение в рамках линейной теории:%
\begin{equation*}%
\phi(x,y,z,t) = \mathcal{W}_1(x,y,z) \mathrel{*} \left(-\zeta_t(x,y,t)\right)
\end{equation*}%
\vspace{-1.5\baselineskip}%
\end{beamercolorbox}%
\endgroup%
#+end_export

**** Column 2
:PROPERTIES:
:BEAMER_col: 0.47
:END:
#+begin_export latex
\vspace{-\baselineskip}%
\spbuArrow{}%
\vspace{-1.3\baselineskip}%
\begingroup%
\setlength\abovedisplayskip{1mm}%
\begin{beamercolorbox}[colsep*=.75ex,vmode]{block body}%
Общее решение:\vspace{-0.5\baselineskip}%
\begin{equation*}%
	\phi(x,y,z,t)
	=
	\mathcal{W}_2(x,y,z)
	\mathrel{*}
%	\frac{\zeta_t(x,y,t)}{i f_1(x,y,t) + i f_2(x,y,t) - f_3(x,y,t)}
	\frac{\zeta_t(x,y,t)}{F\left(f_1, f_2, f_3\right)}
%	& \mathcal{W}_1 \approx \mathcal{W}_2
\end{equation*}%
\vspace{-1.35\baselineskip}%
\end{beamercolorbox}%
\endgroup%
#+end_export

** Notes
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+beamer: \spbuSlide{slide-potential-flow}
123

** Верификация метода выч. давлений
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** Column 1
:PROPERTIES:
:BEAMER_col: 0.47
:END:

#+beamer: \vspace{-0.5cm}
#+header: :width 2.7 :height 1.5 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-plain-wave-velocity-field-comparison-ru.pdf
source(file.path("R", "velocity-potentials.R"))
nlevels <- 41
levels <- pretty(c(-200,200), nlevels)
palette <- colorRampPalette(c("blue", "lightyellow", "red"))
col <- palette(nlevels-1)

par(pty="s",mgp=c(3,0.2,0),mfrow=c(1,2),mar=c(1.5,1,0,0),cex=0.66,bty="n")

# linear solver
#par(fig=c(0,0.95,0,0.5),new=TRUE)
arma.plot_velocity_potential_field(
  file.path("build", "arma-benchmarks", "verification-orig", "plain_wave_linear_solver"),
  levels=levels,
  col=col,
  contour_lwd=0.5,
  zeta_lwd=1,
  sky_col='#F5F6F5',
  axis_args=list(tck=-0.02),
  z_min=-5,
  title_args=list(main="     Линейная\n     теория",outer=FALSE,adj=0,line=-1.5,cex.main=0.77)
)

# high-amplitude solver
#par(fig=c(0,0.95,0.5,1),new=TRUE)
arma.plot_velocity_potential_field(
  file.path("build", "arma-benchmarks", "verification-orig", "plain_wave_high_amplitude_solver"),
  levels=levels,
  col=col,
  contour_lwd=0.5,
  zeta_lwd=1,
  sky_col='#F5F6F5',
  axis_args=list(tck=-0.02),
  z_min=-5,
  title_args=list(main="     Общее\n     решение",outer=FALSE,adj=0,line=-1.5,cex.main=0.77)
)
#+end_src

#+RESULTS:
[[file:build/slides-plain-wave-velocity-field-comparison-ru.pdf]]

**** Column 2
:PROPERTIES:
:BEAMER_col: 0.47
:END:

#+beamer: \vspace{-0.5cm}
#+header: :width 2.7 :height 1.3 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-large-and-small-amplitude-velocity-field-comparison-ru.pdf
source(file.path("R", "velocity-potentials.R"))
linetypes = c("solid", "dashed")
par(pty="s",mgp=c(3,0.3,0),mfrow=c(1,2),mar=c(1.5,1,0,0),cex=0.66,bty="n")
arma.plot_velocity(
  file.path("data", "velocity", "low-amp"),
  file.path("data", "velocity", "low-amp-0"),
  linetypes=linetypes,
  ylim=c(-2,2),
  axis_args=list(tck=-0.04),
  title_args=list(main="  Малая\n  амплитуда",outer=FALSE,adj=0,line=-1.5,cex.main=0.77),
  legend_x="bottomright"
)
arma.plot_velocity(
  file.path("data", "velocity", "high-amp"),
  file.path("data", "velocity", "high-amp-0"),
  linetypes=linetypes,
  ylim=c(-2,2),
  title_args=list(main="Большая\n амплитуда",outer=FALSE,adj=1,line=-1.5,cex.main=0.77),
  axis_args=list(tck=-0.04),
  legend_x="bottomright"
)
#+end_src

#+RESULTS:
[[file:build/slides-large-and-small-amplitude-velocity-field-comparison-ru.pdf]]


*** End column
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

#+header: :width 5.5 :height 1.3 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-irregular-wave-velocity-field-ru.pdf
source(file.path("R", "velocity-potentials.R"))
nlevels <- 41
levels <- pretty(c(-40,40), nlevels)
palette <- colorRampPalette(c("blue", "lightyellow", "red"))
col <- palette(nlevels-1)

par(mgp=c(3,0.2,0),mar=c(1.5,1,0,0),cex=0.66,bty="n")

# high-amplitude solver
arma.plot_velocity_potential_field(
  file.path("build", "arma-benchmarks", "verification", "velocity", "our-formula"),
  levels=levels,
  col=col,
  contour_lwd=0.5,
  zeta_lwd=1,
  sky_col='#F5F6F5',
  axis_args=list(tck=-0.02),
  x_max=40,
  z_min=-5,
  compare_to=file.path("build", "arma-benchmarks", "verification", "velocity", "linear"),
  points_args=list(col="black",bg="black",pch=21,cex=1.5),
  title_args=list(main="      Нерегулярное волнение",outer=FALSE,adj=0.01,line=-1.5,cex.main=0.77)
)
#+end_src

#+RESULTS:
[[file:build/slides-irregular-wave-velocity-field-ru.pdf]]


** Сравнение с линейной теорией					:noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** Линейная теория
:PROPERTIES:
:BEAMER_env: block
:BEAMER_col: 0.4
:END:

#+begin_export latex
\includegraphics<1>{velocity-ref-1}
\includegraphics<2>{velocity-ref-2}
\includegraphics<3>{velocity-ref-4}
#+end_export

**** Новая формула
:PROPERTIES:
:BEAMER_env: block
:BEAMER_col: 0.4
:END:

#+begin_export latex
\includegraphics<1>{velocity-1}
\includegraphics<2>{velocity-2}
\includegraphics<3>{velocity-4}
#+end_export

** Сравнение с формулой для ВМА 				:noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** Малая амплитуда
:PROPERTIES:
:BEAMER_env: block
:BEAMER_col: 0.45
:END:
[[file:graphics/slides/low-amp-color.eps]]

**** Большая амплитуда
:PROPERTIES:
:BEAMER_env: block
:BEAMER_col: 0.45
:END:
[[file:graphics/slides/high-amp-color.eps]]

** Выводы						:noexport:
Метод подходит для
- дискретно заданной $\zeta(x,y,t)$,
- волн произвольных амплитуд,
- произвольной глубины $h=\text{const}$.

* Программный комплекс

** Программная реализация
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+header: :width 1.6 :height 1.6 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-ar-cubes-ru.pdf
source(file.path("R", "common.R"))
par(mgp=c(3,0.4,0), cex=0.6, mar=c(1,2,2,0))
arma.plot_ar_cubes_2d_v2(
	3,
	3,
	xlabel="Индекс части (X)",
	ylabel="Индекс части (Y)",
	list(
		arrow_args=list(lwd=2,angle=7,length=0.125),
		adj_x=0.4,
		adj_y=0.5,
		no_axes=TRUE
	)
)
#+end_src

** Система с общей памятью
:PROPERTIES:
:header-args:R: :results output raw :exports results
:BEAMER_act: <presentation>
:END:

#+beamer: \small
#+header: :results output raw :exports results
#+name: tab-arma-performance
#+begin_src R :results output org :exports results
source(file.path("R", "benchmarks.R"))
options(arma.mark=",")
model_names <- list(
	ar.x="АР",
	ma.x="СС",
	lh.x="ЛХ",
	ar.y="АР",
	ma.y="СС",
	lh.y="ЛХ",
  Row.names="\\orgcmidrule{2-4}{5-6}Подпрограмма"
)
row_names <- list(
  determine_coefficients="Определение коэффициентов",
  validate="Проверка модели",
  generate_surface="Генерация поверхности",
  nit="НБП",
  write_all="Запись вывода в файл",
  copy_to_host="Копирование данных с GPU",
  velocity="Выч. потенциалов скорости"
)
arma.print_openmp_vs_opencl(model_names, row_names)
#+end_src

#+attr_latex: :booktabs t
#+RESULTS: tab-arma-performance

** Система с распределенной памятью
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+header: :width 2 :height 2 :bg #F5F6F5 :font sans
#+begin_src R :file build/slides-bscheduler-performance-ru.pdf
source(file.path("R", "benchmarks.R"))
par(mgp=c(3,0.4,0), cex=0.7, mar=c(2,2,0,0))
data <- arma.load_bscheduler_performance_data()
arma.plot_bscheduler_performance_data(
  data,
  list(
    openmp="OpenMP",
    bsc1="Bscheduler (один узел)",
    bsc2="Bscheduler (два узла)"
  )
)
title(xlab="Размер взволнованной поверхности", ylab="Время, сек.")
#+end_src

** Диаграмма				:noexport:
:PROPERTIES:
:BEAMER_env: fullframe
:END:

#+begin_export latex
  \tikzset{DataBlock/.style={rectangle,draw=spbuDarkGray,thick,text width=2cm,align=center}}%
  \tikzset{Terminator/.style={circle,fill=spbuDarkGray,thick,minimum size=0.4cm,text width=0pt}}%
  \tikzset{Comment/.style={draw=none,fill=none,text width=8.8cm}}%
  \small
  \begin{tikzpicture}[x=6cm,y=0.80cm]
    % UML blocks
    \node[Terminator] (umlStart) at (0,0) {};
    \node[DataBlock] (umlSpec) at (0,-1) {$S(\omega,\theta)$};
    \node[DataBlock] (umlK) at (0,-2) {$K_{i,j,k}$};
    \node[DataBlock,fill=spbuWhite2] (umlK2) at (0,-3) {$K_{i,j,k}^{*}$};
    \node[DataBlock] (umlPhi) at (0,-4) {$\Phi_{i,j,k}$};
    \node[DataBlock] (umlEps) at (0,-5) {$\epsilon_{i,j,k}$};
    \node[DataBlock,fill=spbuWhite2] (umlZeta2) at (0,-6) {$\zeta_{i,j,k}^{*}$};
    \node[DataBlock] (umlZeta) at (0,-7) {$\zeta_{i,j,k}$};
    \node[DataBlock] (umlVelocity) at (0,-8) {$\phi(x,y,z)$};
    \node[DataBlock] (umlPressure) at (0,-9) {$p(x,y,z)$};
    \node[Terminator] (umlEnd) at (0,-10) {};
    \node[circle,draw=spbuDarkGray,thick,minimum size=0.5cm,text width=0pt] at (0,-10) {};

    % edges
    \path[->,thick] (umlStart.south) edge (umlSpec.north);
    \path[thick] (umlSpec.south) edge (umlK.north);
    \path[thick] (umlK.south) edge (umlK2.north);
    \path[thick] (umlK2.south) edge (umlPhi.north);
    \path[thick] (umlPhi.south) edge (umlEps.north);
    \path[thick] (umlEps.south) edge (umlZeta2.north);
    \path[thick] (umlZeta2.south) edge (umlZeta.north);
    \path[thick] (umlZeta.south) edge (umlVelocity.north);
    \path[thick] (umlVelocity.south) edge (umlPressure.north);
    \path[->,thick] (umlPressure.south) edge (umlEnd.north);

    % comments
    \node[align=left,draw=none] at (1,-1) {Частотно-направленный спектр волнения,};
    \node[Comment] at (1,-2) {автоковариационная функция (АКФ),};
    \node[Comment] at (1,-3) {преобразованная АКФ,};
    \node[Comment] at (1,-4) {коэффициенты авторегрессии,};
    \node[Comment] at (1,-5) {белый шум,};
    \node[Comment] at (1,-6) {преобразованная реализация,};
    \node[Comment] at (1,-7) {реализация взволнованной поверхности,};
    \node[Comment] at (1,-8) {потенциал скорости,};
    \node[Comment] at (1,-9) {давление.};
  \end{tikzpicture}
#+end_export

** Оптимизация записи в файл			:noexport:
#+begin_export latex
  \begin{columns}[T]
    \begin{column}{0.575\textwidth}
      \begin{block}{\small Диаграмма событий}
        \vspace{0.25\baselineskip}%
        \includegraphics{overlap-color}
      \end{block}
    \end{column}
    \begin{column}{0.425\textwidth}
      \begin{block}{\small Время генерации}
        \vspace{0.25\baselineskip}%
        \includegraphics{performance-color}
      \end{block}
    \end{column}
  \end{columns}
#+end_export

** Отказоустойчивость			:noexport:
#+begin_export latex
\centering%
\includegraphics{mpp-time-color}
#+end_export

** Выводы			:noexport:
Программная реализация
- масштабируется на SMP и MPP системы,
- эффективна и без использования GPU
- и отказоустойчива.

* Заключение
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

** Заключение
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

- Разработана трехмерная модель для генерации волн произвольных амплитуд.
- Разработан метод вычисления поля давлений без предположений о малости амплитуд
  волн.
- Разработан программный комплекс для систем с общей и распределенной памятью.

** Апробация
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+latex: \small

- Конференции: ISSW'14, HPCS'15, HPCS'16, HPCS'17.
- Глава в книге The Ocean in Motion (Springer Oceanography).

*** Columns
:PROPERTIES:
:BEAMER_env: columns
:BEAMER_opt: T
:END:

**** LAMP4
:PROPERTIES:
:BEAMER_col: 0.30
:BEAMER_env: block
:END:

#+ATTR_LATEX: :width \linewidth
[[file:graphics/slides/lamp4-ar-waves.png]]

**** Ascheduler
:PROPERTIES:
:BEAMER_col: 0.30
:BEAMER_env: block
:END:

#+ATTR_LATEX: :width \linewidth
[[file:graphics/slides/spark-logo.png]]

**** HPCS'15
:PROPERTIES:
:BEAMER_col: 0.30
:BEAMER_env: block
:END:

#+ATTR_LATEX: :width \linewidth
[[file:graphics/slides/hpcs-15-poster-paper-award.png]]

#+latex: \setbeamerfont{block title}{size=\normalsize}

** Взволнованная морская поверхность					:noexport:
:PROPERTIES:
:BEAMER_act: <presentation>
:END:

#+begin_export latex
\begin{tikzpicture}[remember picture,overlay]
  \node[inner sep=0pt,rectangle] at (current page.center){%
    \includegraphics[width=0.95\paperwidth]{wavy}
  };%
\end{tikzpicture}
#+end_export

